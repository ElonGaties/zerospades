name: CI
on:
  pull_request:
  push:

jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache vcpkg and dependencies
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            !.git
          key: ${{ runner.os }}-${{ hashFiles('vcpkg_x86-windows.txt', '.gitmodules') }}

      - name: Bootstrap vcpkg
        run: vcpkg\bootstrap-vcpkg.bat -disableMetrics

      - name: Build dependencies
        run: vcpkg\vcpkg install @vcpkg_x86-windows.txt

      - name: Build application
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}\openspades.mk
          build-type: Release
          configure-options: >
            -A Win32
            -D CMAKE_BUILD_TYPE=Release
            -D CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake
            -D VCPKG_TARGET_TRIPLET=x86-windows-static
            -D CMAKE_CXX_STANDARD=17
          parallel: 8

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Release-Windows
          path: |
            ${{ runner.workspace }}\openspades.mk\bin\Release
            !${{ runner.workspace }}\**\*.lib
            !${{ runner.workspace }}\**\*.exp
            !${{ runner.workspace }}\**\*.pdb
          if-no-files-found: warn

  build-macos:
    name: Build (macOS)
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache vcpkg and dependencies
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            !.git
          key: ${{ runner.os }}-${{ hashFiles('vcpkg_x86_64-darwin.txt', '.gitmodules') }}

      - name: Bootstrap vcpkg
        run: vcpkg/bootstrap-vcpkg.sh -disableMetrics

      - name: Build dependencies
        run: vcpkg/vcpkg install @vcpkg_x86_64-darwin.txt

      - name: Build application
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/openspades.mk
          build-type: Release
          configure-options: >
            -D CMAKE_BUILD_TYPE=Release
            -D CMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
            -D VCPKG_TARGET_TRIPLET=x64-osx
            -D CMAKE_OSX_ARCHITECTURES=x86_64
            -D CMAKE_CXX_STANDARD=17
          parallel: 8

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Release-macOS
          path: |
            ${{ runner.workspace }}/openspades.mk/bin
          if-no-files-found: warn
  
  build-nix:
    name: Build (Linux + Nix)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v18

      - name: Build Nix flake
        run: nix build

